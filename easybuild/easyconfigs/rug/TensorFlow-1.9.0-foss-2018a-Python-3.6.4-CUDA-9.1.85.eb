name = 'TensorFlow'
version = '1.9.0'
cuda_ver = '9.1.85'
versionsuffix = '-Python-%%(pyver)s-CUDA-%s' % cuda_ver

homepage = 'https://www.tensorflow.org/'
description = "An open-source software library for Machine Intelligence"

toolchain = {'name': 'foss', 'version': '2018a'}
toolchainopts = {'pic': True}

source_urls = ['https://github.com/tensorflow/tensorflow/archive/']
sources = ['v%(version)s.tar.gz']
patches = [
    'TensorFlow-1.5.0_swig-env.patch',
    'TensorFlow-1.6.0_dont_expand_cuda_cudnn_path.patch',
    'TensorFlow-1.8.0_remove-msse-hardcoding.patch',
    'TensorFlow-1.8.0_no_boringssl.patch',
    'TensorFlow-1.8.0_no_grpc.patch',
]
checksums = [
    'ffc3151b06823d57b4a408261ba8efe53601563dfe93af0866751d4f6ca5068c',  # v1.9.0.tar.gz
    '53807290f1acb6a0f2a84f1a0ad9f917ee131c304b3e08679f3cbd335b22c7ef',  # TensorFlow-1.5.0_swig-env.patch
    'f490b35179ed5c864255950784d5677d02f6c83a1684d406dbd31e2607d342fa',  # TensorFlow-1.6.0_dont_expand_cuda_cudnn_path.patch
    '4d043bba84d19aa38e402ef4ddaa89df936ae792f82693a49ce8ae4a1d091f6d',  # TensorFlow-1.8.0_remove-msse-hardcoding.patch
]

builddependencies = [
    ('Bazel', '0.15.2'),
    ('wheel', '0.30.0', '-Python-%(pyver)s'),
]

dependencies = [
    ('Python', '3.6.4'),
    ('cuDNN', '7.0.5', '-CUDA-%s' % cuda_ver, True),
]

cuda_compute_capabilities = ['3.5', '6.1', '7.0']
# Run on gpu partition with:
# ./eb_install.sh 'export LD_LIBRARY_PATH=/usr/lib64/nvidia:$LD_LIBRARY_PATH && echo $LD_LIBRARY_PATH && eb ~/easybuild/easybuild-easyconfigs/easybuild/easyconfigs/t/TensorFlow/TensorFlow-1.9.0-foss-2018a-Python-3.6.4-CUDA-9.1.85.eb '
# Don't forget to link within the eb_install.sh script by adding: "-B /usr/lib64/nvidia:/usr/lib64/nvidia "

moduleclass = 'lib'
