[localhost]
PARALLEL_COMMAND = srun %_(COMMAND)s
NAME = SLURM
MANDATORY = False
SUBMIT_COMMAND = sbatch %_(JOB_SCRIPT)s
SUBMIT_TEMPLATE = #!/bin/bash
	### Inherit all current environment variables
	#SBATCH --export=ALL
	### Job name
	#SBATCH --job-name=%_(JOB_NAME)s
        ### Outputs (we need to escape the job id as %%j)
        #SBATCH -o job%%j.out
        #SBATCH -e job%%j.err
	### Partition (queue) name
	#SBATCH --partition=%_(JOB_QUEUE)s
	### Specify the number of nodes and thread (ppn) for your job.
	#SBATCH --ntasks=%_(JOB_NODES)d
	#SBATCH --cpus-per-task=%_(JOB_THREADS)d
	### Specify the amount of memory (in megabytes) per CPU for your job.
	#SBATCH --mem-per-cpu=%_(JOB_MEMORY)s
	### Tell SLURM the anticipated run-time for your job, where walltime=HH:MM:SS
	#SBATCH --time=%_(JOB_TIME)s:00:00
	### Number of GPUs
	#SBATCH --gres=gpu:%_(JOB_GPUS)s
	# Use as working dir the path where sbatch was launched
	WORKDIR=$SLURM_SUBMIT_DIR
	#################################
	### Set environment varible to know running mode is non interactive
	export XMIPP_IN_QUEUE=1
	### Switch to the working directory;
	cd $WORKDIR
	# Make a copy of PBS_NODEFILE
	cp $SLURM_JOB_NODELIST %_(JOB_NODEFILE)s
        # Calculate the number of processors allocated to this run.
        NPROCS=`wc -l < $SLURM_JOB_NODELIST`
        # Calculate the number of nodes allocated.
        NNODES=`uniq $SLURM_JOB_NODELIST | wc -l`

	### Display the job context
	echo Running on host `hostname`
	echo Time is `date`
	echo Working directory is `pwd`
        echo Using ${NPROCS} processors across ${NNODES} nodes
        echo NODE LIST:
        cat $SLURM_JOB_NODELIST
	#################################
	%_(JOB_COMMAND)s
CANCEL_COMMAND = scancel %_(JOB_ID)s
CHECK_COMMAND = squeue -j %_(JOB_ID)s
#QUEUES = { "default": {} }
QUEUES = { "nodes":       [["JOB_MEMORY", "4096", "Memory per core (MB)", "Select amount of memory (in megabytes) per core for this job"],
                          ["JOB_TIME", "72", "Time (hours)", "Select the time expected (in hours) for this job"]
                          ],
           "himem":       [["JOB_MEMORY", "20480", "Memory per core (MB)", "Select amount of memory (in megabytes) per core for this job"],
                          ["JOB_TIME", "72", "Time (hours)", "Select the time expected (in hours) for this job"]
                          ],
           "gpu":         [["JOB_MEMORY", "4096", "Memory per core (MB)", "Select amount of memory (in megabytes) per core for this job"],
                          ["JOB_TIME", "72", "Time (hours)", "Select the time expected (in hours) for this job"],
                          ["JOB_GPUS", "1", "Nr of GPUs", "Select the number of GPUs to be requested for this job"]
                          ]
         }
QUEUES_DEFAULT = {"JOB_GPUS": "0" }
